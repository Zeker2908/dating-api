server:
  port: 8081
spring:
  application:
    name: authentication-service
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            redirect-uri: ${app.domain}/login/oauth2/code/{registrationId}
            scope:
              - email
              - profile
              - openid
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}
    admin:
      properties:
        offsets.topic.replication-factor: 1
        transactions.state.log.replication-factor: 1
        transactions.state.log.min.isr: 1
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: 0
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost:5432}/users
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USERNAME:admin}
    password: ${POSTGRES_PASSWORD:admin}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.yaml
logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    eureka: INFO
    ru.zeker: DEBUG
jwt:
  private-key-path: ${PRIVATE_KEY}
  public-key-path: ${PUBLIC_KEY}
  access:
    expiration: 900000
  refresh:
    expiration: 604800000
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_HOST:localhost}/eureka

app:
  domain: http://localhost:8080
  version: 1
  admin:
    username: ${ADMIN_EMAIL:admin@admin.com}
  security:
    password-history:
      max-count: 5
